generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model bookings {
  id        Int       @id @default(autoincrement())
  userId    Int
  carId     Int
  startTime DateTime
  endTime   DateTime
  duration  Int
  status    String @default("pending")
  bookedPrice Float @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  cars      cars      @relation(fields: [carId], references: [id], map: "Bookings_carId_fkey")
  users     users     @relation(fields: [userId], references: [id], map: "Bookings_userId_fkey")

  @@index([carId], map: "Bookings_carId_fkey")
  @@index([userId], map: "Bookings_userId_fkey")
}

model carTypes {
  id        Int       @id @default(autoincrement())
  typeName  String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  cars      cars[]    // A type can be associated with multiple cars
}

model carBrands {
  id        Int       @id @default(autoincrement())
  BrandName String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  cars      cars[]    // A brand can be associated with multiple cars
}

model cars {
  id           Int        @id @default(autoincrement())
  brandId      Int        
  typeId       Int
  model        String
  year         Int
  registration String?     @unique(map: "Cars_registration_key")
  pricePerMinute Float
  engineCapacity Float
  available    Boolean    @default(true)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime?
  bookings     bookings[]

  brand           carBrands  @relation(fields: [brandId], references: [id], map: "Cars_brandId_fkey")
  type            carTypes   @relation(fields: [typeId], references: [id], map: "Cars_typeId_fkey")
}

model users {
  id        Int        @id @default(autoincrement())
  username  String
  email     String
  password  String
  createdAt DateTime   @default(now())
  fullName  String?
  isAdmin   Boolean    @default(false)
  updatedAt DateTime?
  bookings  bookings[]
}
